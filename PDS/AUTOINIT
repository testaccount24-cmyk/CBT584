//KURZINIT JOB (DVRF,PS,,,,,,,00,4703F0000),
//             'CILESIZ 218',
//             CLASS=H,
//             MSGCLASS=0,
//             REGION=4M,
//             NOTIFY=&SYSUID
//* --------------------------------------------------------- *
//*  PROGRAMMER : UGUR CILESIZ                                *
//*  DATE       : 21.12.2001                                  *
//*  CHANGED    : 02.05.2002                                  *
//*  NEEDED     : RE03063.SLEEP.LOAD                          *
//*  LIBRARIES    RE03063.XMITIP.EXEC                         *
//* --------------------------------------------------------- *
//*  DESCRIPTION: DASD MANAGEMENT IN BATCH                    *
//*               *  VARY OFFLINE THE UNITS                   *
//*               *  ICKDSF INIT DASD                         *
//*               *  VARY ONLINE THE UNITS                    *
//*               *. IDCAMS DEFINE VVDS                       *
//*               *  IDCAMS DEFINE GDG'S FOR DISASTER REC.    *
//* --------------------------------------------------------- *
//*  HOW TO USE :  1. FIND //INITIAL                          *
//*                2. FILL IN THE SYSUT1 CARD THE FIELDS      *
//*                   NEWVOLUME  OLDVOLUME UNITADR SMS-BIT    *
//*                   AND STYPE                               *
//*                                                           *
//*                   SMS-BIT :  1 = SMS MANAGED              *
//*                              0 = NOT SMS MANAGED          *
//*                                                           *
//*                   STYPE   :  0 = NO BACKUP                *
//*                              T = DAILY BACKUP             *
//*                              N = WEEKLY BACKUP            *
//*                              B = BOTH ( T + N )           *
//*                                                           *
//*                                                           *
//*                   OLDVOLUME: + = NOVERIFY                 *
//*                                                           *
//*                3. SUBMIT THE JOB                          *
//* --------------------------------------------------------- *
//* --------------------------------------------------------- *
//*  CALL ISPF IN BATCH-PROCESSING-MOD                        *
//* --------------------------------------------------------- *
//$ISPFBAT  PROC SOUT='*'
//G         EXEC PGM=IKJEFT01
//ISPLLIB   DD DISP=SHR,DSN=SYS1.SISPLOAD
//ISPSLIB   DD DISP=SHR,DSN=SYS1.SISPSENU
//ISPPLIB   DD DISP=SHR,DSN=SYS1.SISPPENU
//ISPMLIB   DD DISP=SHR,DSN=SYS1.SISPMENU
//ISPTLIB   DD DISP=SHR,DSN=SYS1.SISPTENU
//ISPPROF   DD UNIT=SYSDA,SPACE=(TRK,(5,5,5)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)
//ISPLOG    DD UNIT=SYSDA,SPACE=(TRK,(2,1)),
//             DCB=(RECFM=FBA,LRECL=121,BLKSIZE=6413,DSORG=PS)
//ISPLIST   DD UNIT=SYSDA,SPACE=(TRK,(2,1)),
//             DCB=(RECFM=FBA,LRECL=121,BLKSIZE=6413,DSORG=PS)
//SYSTSPRT  DD SYSOUT=&SOUT
//SYSPRINT  DD SYSOUT=&SOUT
//ENDE      PEND
//* --------------------------------------------------------- *
//*   GENERATE THE SYSIN CARD                                 *
//* --------------------------------------------------------- *
//INPUT   EXEC PGM=IEBGENER
//* --------------------------------------------------------- *
//*  DELETE REPORT DATA SET                                   *
//* --------------------------------------------------------- *
//DELDS     DD DSN=&SYSUID..AUTOINIT.REPORT,DISP=(MOD,DELETE),
//             UNIT=3390,SPACE=(TRK,1)
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT2    DD DISP=(NEW,PASS,DELETE),DSN=&&INPUT,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//SYSUT1    DD DATA,DLM=@#
  * -------------------------------------------- *
  *        Eingabe Maske                         *
  * -------------------------------------------- *
  *  NEWVOL | OLDVOL | UNITADR | SMS-BIT | STYPE *
  * --------+--------+---------+---------+------ *
  *         |        |         |         |       *
     FSVK03   SK763A   763A        1        N
     FSVK04   SK763B   763B        0        B
     FSVK05   SK763C   763C        1        T
@#
//* --------------------------------------------------------- *
//*  GENERATE KURZINIT REXX PROCEDURE                         *
//* --------------------------------------------------------- *
//RX00    EXEC PGM=IEBGENER
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT2    DD DISP=(NEW,PASS,DELETE),DSN=&&PDS(KURZINIT),
//             UNIT=3390,SPACE=(TRK,(100,100,10)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PO)
//SYSUT1    DD DATA,DLM=@#
/* Rexx ---------------------------------------------------- *
 *                                                           *
 * Programmer : Ugur Cilesiz                                 *
 * Date       : 12.06.2002                                   *
 * Changed    :                                              *
 * Descript.  : A Rexx Utility To Initialize DASD with       *
 *              ICKDSF                                       *
 * Aufbau Member:                                            *
 *                                                           *
           *  NEWVOL | OLDVOL | UNITADR | SMS-BIT | STYPE *
           * --------+--------+---------+---------+------ *
           *         |        |         |         |       *
 *                                                           *
 * --------------------------------------------------------- */
Trace O
/* --------------------------------------------------------- *
 *             Main Procedure                                *
 * --------------------------------------------------------- */
DoIt:

Call ReadIt

Exit

/* --------------------------------------------------------- *
 *             Display ISPF Message                          *
 * --------------------------------------------------------- */

IspMsg:

Parse Arg ZEDLMSG
Say ZEDLMSG

Return

/* --------------------------------------------------------- *
 *             Allocation For The JCL Cards                  *
 * --------------------------------------------------------- */

Mesaj  = Msg('ON')

ReadIt:
"EXECIO * DISKR INPUT (STEM Input."
If Input.0 = 0
   Then Do
   Call IspMsg "There Is No Input In Member "Mem
   Exit
   End

Do i = 1 to Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
   Call VaryUnit  Uadr.i OFFLINE
   If i = Input.0
      Then Queue ""
End


"EXECIO * DISKW VARYOFF (FINIS"

Do  i = 1 To Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
   Oldvol.i = Strip(Oldvol.i)
If Oldvol.i = '+'
   Then Do
Queue " INIT UNIT("Uadr.i") NOVERIFY VOLID("NewVol.i")                 -"
        End
   Else Do
Queue " INIT UNIT("Uadr.i") VERIFY("OldVol.i") VOLID("NewVol.i")       -"
        End
Queue "      INDEX (0,1,74)                                -           "
Queue "      VTOC(5,0,300)                                 -           "
Queue "      MAP                                           -           "

/* --------------------------------------------------------- *
 *             Volume Is DFSMS Managed                       *
 * --------------------------------------------------------- */
If Sms.i = 1 Then Do
   Queue "      STORAGEGROUP                                  - "
   End

Queue "      NOCHECK                                       -           "
Queue "      NOVALIDATE                               "
End


"EXECIO * DISKW ICKIN (FINIS"

Return
VaryUnit:
 Arg Unit OffOrOn

/* --------------------------------------------------------- *
 *   PASS THE COMMAND LINES TO SDSF                          *
 * --------------------------------------------------------- */

 Queue  " /V "||Unit||","||OffOrOn

Return 0
/* --------------------------------------------------------- *
 *             End Of The Procedure                          *
 * --------------------------------------------------------- */
@#
//* --------------------------------------------------------- *
//*  EXECUTE THE KURZINIT REXX PROCEDURE                      *
//* --------------------------------------------------------- *
//INIT    EXEC $ISPFBAT
//INPUT     DD DISP=SHR,DSN=&&INPUT
//ICKIN     DD DISP=(NEW,PASS,DELETE),DSN=&&ICKIN,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//VARYOFF   DD DISP=(NEW,PASS,DELETE),DSN=&&VARYOFF,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//SYSEXEC   DD DISP=(OLD,DELETE,DELETE),DSN=&&PDS
//SYSTSPRT  DD SYSOUT=*
//SYSTSIN   DD *
  %KURZINIT
/*
//* --------------------------------------------------------- *
//*  VARY OFFLINE TROUGH SDSF                                 *
//* --------------------------------------------------------- *
//VARYOFF EXEC PGM=SDSF,PARM='++60,228'
//ISFOUT    DD SYSOUT=*
//ISFIN     DD DISP=SHR,DSN=&&VARYOFF
//* --------------------------------------------------------- *
//*  WAIT FOR 10 SECS.                                        *
//* --------------------------------------------------------- *
//SLEEP   EXEC PGM=IKJEFT01,PARM='WAIT10'
//STEPLIB   DD DISP=SHR,DSN=RE03063.SLEEP.LOAD
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSTSIN   DD DUMMY
//* --------------------------------------------------------- *
//*  EXECUTE ICKDSF FOR DASD INIT                             *
//* --------------------------------------------------------- *
//ICKDSF  EXEC PGM=ICKDSF
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DISP=(OLD,DELETE),DSN=&&ICKIN      *
//* --------------------------------------------------------- *
//*  GENERATE DEFVVDS REXX PROCEDURE                          *
//* --------------------------------------------------------- *
//RX01    EXEC PGM=IEBGENER       /* GENERATE REXX PROCEDURE         */
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT2    DD DISP=(NEW,PASS,DELETE),DSN=&&PDS(DEFVVDS),
//             UNIT=3390,SPACE=(TRK,(100,100,10)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PO)
//SYSUT1    DD DATA,DLM=@#
/* Rexx ---------------------------------------------------- *
 *                                                           *
 * Programmer : Ugur Cilesiz                                 *
 * Date       : 12.06.2002                                   *
 * CHANGED    :                                              *
 * Descript.  : A Rexx Utility To Define VVDS For DASD       *
 *                                                           *
 * --------------------------------------------------------- */
Trace O
/* --------------------------------------------------------- *
 *             Main Procedure                                *
 * --------------------------------------------------------- */
DoIt:

Call ReadIt

Exit

/* --------------------------------------------------------- *
 *             Display ISPF Message                          *
 * --------------------------------------------------------- */

IspMsg:

Parse Arg ZEDLMSG
Say ZEDLMSG

Return

/* --------------------------------------------------------- *
 *             Allocation For The JCL Cards                  *
 * --------------------------------------------------------- */

Mesaj  = Msg('ON')

ReadIt:
"EXECIO * DISKR INPUT (STEM Input."
If Input.0 = 0
   Then Do
   Call IspMsg "There Is No Input In Member "Mem
   Exit
   End

Do i = 1 to Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
   Call VaryUnit  Uadr.i ONLINE
   If i = Input.0
      Then Queue ""
End


"EXECIO * DISKW VARYON (FINIS"

Do  i = 1 To Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
Queue " DEFINE CLUSTER                                     - "
Queue "      (NAME(SYS1.VVDS.V"||Newvol.i||")                      -   "
Queue "      NONINDEXED                                    -           "
Queue "      VOLUMES("||Newvol.i||")                               -   "
Queue "      CYLINDERS(10 1))                                          "
End


"EXECIO * DISKW DEFVVDS (FINIS"

Return
VaryUnit:
 Arg Unit OffOrOn

/* --------------------------------------------------------- *
 *   PASS THE COMMAND LINES TO SDSF                          *
 * --------------------------------------------------------- */

 Queue  " /V "||Unit||","||OffOrOn

Return 0
/* --------------------------------------------------------- *
 *             End Of The Procedure                          *
 * --------------------------------------------------------- */
@#
//* --------------------------------------------------------- *
//*  EXECUTE DEFVVDS REXX PROCEDURE                           *
//* --------------------------------------------------------- *
//DEFVVDS EXEC $ISPFBAT           /* EXECUTE REXX PROCEDURE          */
//INPUT     DD DISP=SHR,DSN=&&INPUT
//DEFVVDS   DD DISP=(NEW,PASS,DELETE),DSN=&&DEFVVDS,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//VARYON    DD DISP=(NEW,PASS,DELETE),DSN=&&VARYON,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//SYSEXEC   DD DISP=(OLD,DELETE,DELETE),DSN=&&PDS
//SYSTSPRT  DD SYSOUT=*
//SYSTSIN   DD *
  %DEFVVDS
/*
//* --------------------------------------------------------- *
//*  VARY ONLINE TROUGH SDSF                                  *
//* --------------------------------------------------------- *
//VARYON  EXEC PGM=SDSF,PARM='++60,228'
//ISFOUT    DD SYSOUT=*
//ISFIN     DD DISP=SHR,DSN=&&VARYON
//* --------------------------------------------------------- *
//*  WAIT FOR 10 SECS.                                        *
//* --------------------------------------------------------- *
//SLEEP   EXEC PGM=IKJEFT01,PARM='WAIT10'
//STEPLIB   DD DISP=SHR,DSN=RE03063.SLEEP.LOAD
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSTSIN   DD DUMMY
//* --------------------------------------------------------- *
//*  EXECUTE IDCAMS FOR DEFINE VVDS                           *
//* --------------------------------------------------------- *
//DEFVVDS EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DISP=(OLD,DELETE),DSN=&&DEFVVDS *
//* --------------------------------------------------------- *
//*  GENERATE DEFGDG  REXX PROCEDURE                          *
//* --------------------------------------------------------- *
//RX02    EXEC PGM=IEBGENER       /* GENERATE REXX PROCEDURE         */
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT2    DD DISP=(NEW,PASS,DELETE),DSN=&&PDS(DEFGDG),
//             UNIT=3390,SPACE=(TRK,(100,100,10)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PO)
//SYSUT1    DD DATA,DLM=@#
/* Rexx ---------------------------------------------------- *
 *                                                           *
 * Programmer : Ugur Cilesiz                                 *
 * Date       : 12.06.2002                                   *
 * CHANGED    :                                              *
 * Descript.  : A Rexx Utility To Define GDG  For DASD       *
 *                                                           *
 * --------------------------------------------------------- */
Trace O
/* --------------------------------------------------------- *
 *             Main Procedure                                *
 * --------------------------------------------------------- */
DoIt:

Call ReadIt

Exit

/* --------------------------------------------------------- *
 *             Display ISPF Message                          *
 * --------------------------------------------------------- */

IspMsg:

Parse Arg ZEDLMSG
Say ZEDLMSG

Return

/* --------------------------------------------------------- *
 *             Allocation For The JCL Cards                  *
 * --------------------------------------------------------- */
Mesaj  = Msg('ON')

ReadIt:
"EXECIO * DISKR INPUT (STEM Input."
If Input.0 = 0
   Then Do
   Call IspMsg "There Is No Input In Member "Mem
   Exit
   End


Do  i = 1 To Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
   Newvol.i = Strip(Newvol.i)
   Stype.i  = Strip(Stype.i)
   If Stype.i <> 0
      Then Do
           If Stype.i = 'B'
              Then Do
                   Stype.i = 'T'
Queue " DEFINE GDG                                         - "
Queue "      (NAME(FB3FNOT.T."||Stype.i||Newvol.i||")              -   "
Queue "      SCRATCH NOEMPTY LIMIT(255))                               "
                   Stype.i = 'N'
Queue " DEFINE GDG                                         - "
Queue "      (NAME(FB3FNOT.T."||Stype.i||Newvol.i||")              -   "
Queue "      SCRATCH NOEMPTY LIMIT(255))                               "
                   End
              Else Do
Queue " DEFINE GDG                                         - "
Queue "      (NAME(FB3FNOT.T."||Stype.i||Newvol.i||")              -   "
Queue "      SCRATCH NOEMPTY LIMIT(255))                               "
                   End
           End
      Else Queue " SET LASTCC=0"
End


"EXECIO * DISKW GDGDEF (FINIS"

Return
/* --------------------------------------------------------- *
 *             End Of The Procedure                          *
 * --------------------------------------------------------- */
@#
//* --------------------------------------------------------- *
//*  EXECUTE DEFVVDS REXX PROCEDURE                           *
//* --------------------------------------------------------- *
//DEFGDG  EXEC $ISPFBAT           /* EXECUTE REXX PROCEDURE          */
//INPUT     DD DISP=SHR,DSN=&&INPUT
//GDGDEF    DD DISP=(NEW,PASS,DELETE),DSN=&&GDGDEF,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//SYSEXEC   DD DISP=(OLD,DELETE,DELETE),DSN=&&PDS
//SYSTSPRT  DD SYSOUT=*
//SYSTSIN   DD *
  %DEFGDG
/*
//* --------------------------------------------------------- *
//*  EXECUTE IDCAMS FOR DEFINE VVDS                           *
//* --------------------------------------------------------- *
//GDGDEF  EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DISP=(OLD,DELETE),DSN=&&GDGDEF
//*
//* --------------------------------------------------------- *
//*  GENERATE REPORT  REXX PROCEDURE                          *
//* --------------------------------------------------------- *
//RX03    EXEC PGM=IEBGENER       /* GENERATE REXX PROCEDURE         */
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT2    DD DISP=(NEW,PASS,DELETE),DSN=&&PDS(REPORT),
//             UNIT=3390,SPACE=(TRK,(100,100,10)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PO)
//SYSUT1    DD DATA,DLM=@#
/* Rexx ---------------------------------------------------- *
 *                                                           *
 * Programmer : Ugur Cilesiz                                 *
 * Date       : 12.06.2002                                   *
 * CHANGED    :                                              *
 * Descript.  : Report erstellen und f}r                     *
 *              die e-mail- Funktion  aufbereiten            *
 * --------------------------------------------------------- */
Trace O
/* --------------------------------------------------------- *
 *             Main Procedure                                *
 * --------------------------------------------------------- */
DoIt:

Call ReadIt

Exit

/* --------------------------------------------------------- *
 *             Display ISPF Message                          *
 * --------------------------------------------------------- */

IspMsg:

Parse Arg ZEDLMSG
Say ZEDLMSG

Return

/* --------------------------------------------------------- *
 *             Allocation For The JCL Cards                  *
 * --------------------------------------------------------- */
Mesaj  = Msg('ON')

ReadIt:
"EXECIO * DISKR INPUT (STEM Input."
If Input.0 = 0
   Then Do
   Call IspMsg "There Is No Input In Member "Mem
   Exit
   End

GetSMFId:
  Cvt      = C2d(Storage(10,4))
  Smca     = Storage(D2x(Cvt + 196),4)
  Smca     = C2d(Bitand(Smca,'7FFFFFFF'X))
  SMFID    = Strip(Storage(D2x(Smca + 16),4),T)
  Node     = Sysvar('SYSNODE')
GetUser:
  If Userid() = 'RE03063'
     Then Do
          UserName = 'Ugur Cilesiz'
          email    = 'Ugur.Cilesiz@Rwesystems.com'
          telnr    = '+49-2181-285-218'
          End
  If Userid() = 'R255386'
     Then Do
          UserName = 'Matthias Dieck'
          email    = 'Matthias.Dieck@Rwesystems.com'
          telnr    = '+49-2181-285-223'
          End
  If Userid() = 'R404641'
     Then Do
          UserName = 'Wolfgang Franke'
          email    = 'Wolfgang.Franke@Rwesystems.com'
          telnr    = '+49-2181-285-210'
          End
FirstLoop = 0
Do  i = 1 To Input.0
   If Index(Input.i,'*') > 0 | Input.i = ''
      Then Iterate
   Parse Var Input.i Newvol.i Oldvol.i Uadr.i Sms.i Stype.i
   Newvol.i = Strip(Newvol.i)
   Stype.i  = Strip(Stype.i)
   If Stype.i  = 'B'
      Then StypeText.i = "NOTFALL+TAEGLICH "
   If Stype.i  = 'N'
      Then StypeText.i = "NOTFALL          "
   If Stype.i  = 'T'
      Then StypeText.i = "TAEGLICH         "
   If Stype.i  = '0'
      Then StypeText.i = "Keine Sicherung  "
   If FirstLoop = 0
      Then Do
           FirstLoop = 1
           Queue "Hallo !"
           Queue "                                                "
           Queue "                                                "
           Queue "                                                "Date()
           Queue "                                                "Time()
           Queue "                                                "
           Queue "Auf der LPAR "SMFId
           Queue "wurde(n) folgende(n) Platte(n) angelegt:"
           Queue "                                                "
           Queue "                                                "
           Queue "                                                "
           Queue "+--------+-------------------------------------+-----------+"
           Queue "| Volser | Sicherung                           | Kontrolle |"
           Queue "+--------+-------------------------------------+-----------+"
           End
           Queue "| "Newvol.i" | "StypeText.i"                   |           |"
           Queue "+--------+-------------------------------------+-----------+"
End
           Queue "                                                "
           Queue "Mit freundlichen Gruessen                       "
           Queue "                                                "
           Queue " "Username
           Queue " e-mail:"email
           Queue " Tel.:  "telnr

"EXECIO * DISKW REPORT (FINIS"

Return
/* --------------------------------------------------------- *
 *             End Of The Procedure                          *
 * --------------------------------------------------------- */
@#
//* --------------------------------------------------------- *
//*  EXECUTE REPORT  REXX PROCEDURE                           *
//* --------------------------------------------------------- *
//REPORT  EXEC $ISPFBAT           /* EXECUTE REXX PROCEDURE          */
//INPUT     DD DISP=SHR,DSN=&&INPUT
//REPORT    DD DISP=(NEW,CATLG,DELETE),DSN=&SYSUID..AUTOINIT.REPORT,
//             UNIT=3390,SPACE=(TRK,(100,100)),
//             DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB,DSORG=PS)
//SYSEXEC   DD DISP=(OLD,DELETE,DELETE),DSN=&&PDS
//SYSTSPRT  DD SYSOUT=*
//SYSTSIN   DD *
  %REPORT
/*
//PRINT   EXEC PGM=IEBGENER
//*
//SYSPRINT  DD SYSOUT=*
//SYSUT1    DD DISP=SHR,DSN=&SYSUID..AUTOINIT.REPORT
//SYSUT2    DD SYSOUT=(Y,,PR11),DEST=KOB
//SYSIN     DD *
/*
//*   Hier ist Schluss ||
//
//MAIL    EXEC PGM=IKJEFT1B,DYNAMNBR=50
//REPORT    DD DISP=SHR,DSN=&SYSUID..AUTOINIT.REPORT
//SYSEXEC   DD DISP=SHR,DSN=RE03063.XMITIP.EXEC
//SYSPRINT  DD  SYSOUT=*
//MSGDS     DD *
Hallo

Die im Anhang aufgelisteten Platten wurden
neu angelegt.

|| Dies ist nur ein Test ||
/*
//ADRDS     DD *
* Mail Addressen Storage- Management im RZ RWE Systems Neurath
CC  Ugur.Cilesiz@Rwesystems.com
CC  Hans.Wurst@Rwesystems.com
/*
//SYSTSPRT  DD  SYSOUT=*
//SYSTSIN   DD   *
%xmitip * +
        Msgdd MSGDS +
        From RE03063@fri.energie.rwe.de +
        AddressfileDD ADRDS +
        Subject 'Neue Platten |||' +
        File REPORT +
        Filename neue.platte.pdf +
        Format PDF////
/*
//
